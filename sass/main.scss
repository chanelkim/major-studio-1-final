/* ORDER MATTERS */
//test
// Load custom font
@font-face {
  font-family: "Formula Condensed";
  src: url("fonts/FormulaCondensed/FormulaCondensed-Black.otf")
      format("opentype"),
    url("fonts/FormulaCondensed/FormulaCondensed-Bold.otf") format("opentype"),
    url("fonts/FormulaCondensed/FormulaCondensed-light.otf") format("opentype"),
    url("fonts/FormulaCondensed/FormulaCondensed-Regular.otf")
      format("opentype");
  font-weight: normal;
}
@font-face {
  font-family: "Neue Montreal";
  src: url("fonts/NeueMontreal/NeueMontreal-Bold.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-Bold.ttf") format("truetype"),
    url("fonts/NeueMontreal/NeueMontreal-BoldItalic.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-BoldItalic.ttf") format("truetype"),
    url("fonts/NeueMontreal/NeueMontreal-Italic.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-Italic.ttf") format("truetype"),
    url("fonts/NeueMontreal/NeueMontreal-Light.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-Light.ttf") format("truetype"),
    url("fonts/NeueMontreal/NeueMontreal-LightItalic.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-LightItalic.ttf") format("truetype"),
    url("fonts/NeueMontreal/NeueMontreal-Regular.otf") format("opentype"),
    url("fonts/NeueMontreal/NeueMontreal-Regular.ttf") format("truetype");
  font-weight: normal;
}
@font-face {
  font-family: "Neue World";
  src: url("fonts/NeueWorld/NeueWorld-Regular.ttf") format("truetype"),
    url("fonts/NeueWorld/NeueWorld-SemiExtendedUltralight.ttf")
      format("truetype");
  font-weight: normal;
}
@font-face {
  font-family: "Agrandir Variable";
  src: url("fonts/AgrandirVariable/Agrandir Variable.ttf") format("truetype");
  font-weight: normal;
}
@font-face {
  font-family: "Agrandir";
  src: url("fonts/Agrandir/Agrandir-Regular.otf") format("opentype"),
    url("fonts/Agrandir/Agrandir-Narrow.otf") format("opentype"),
    url("fonts/Agrandir/Agrandir-WideLight.ttf") format("truetype"),
    url("fonts/Agrandir/Agrandir-Grand.ttf") format("truetype");
  font-weight: normal;
}

// -----
// 1. Import Functions File
@import "../node_modules/bootstrap/scss/functions";
// (redefine variables not dependent on anything else)

// GLOBAL VARIABLES
// Main Styles
html,
body {
  overflow-x: hidden; /* Prevent scroll on narrow devices */
  padding: 0;
  margin: 0;
}

// FONT FAMILY - FONT SIZES - HEADINGS
body {
  padding-top: 60px;
  font-family: "NeueMontreal-Regular", sans-serif;
}
h1 {
  font-family: "NeueMontreal-Light", sans-serif;
  font-size: 3rem;
}

p {
  font-size: 1rem;
  letter-spacing: -0.05rem;
}

// Navbar
// .navbar-nav .nav-link {
//   font-family: "NeueMontreal-Regular", sans-serif;
//   letter-spacing: 0.02rem;
//   color: black;
// }
.navbar-brand {
  font-family: "FormulaCondensed-Regular", sans-serif;
  letter-spacing: 0.05rem;
  text-transform: uppercase;
}
.nav-link {
  font-family: "NeueMontreal-Light", sans-serif;
  font-size: 4rem;
  // letter-spacing: 0.02rem;
}

// Main
#main {
  margin-left: 1rem;
  margin-right: 1rem;
  padding-bottom: 4rem;
}
section {
  // margin-top: 3rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.section-head {
  padding-top: 4rem;
}

// Footer
#footer {
  font-family: "NeueMontreal-Regular", sans-serif;
  padding-top: 0.5rem;
  padding-bottom: 1rem;
}
#footer-sidebar-button {
  font-family: "NeueMontreal-Light", sans-serif;
  letter-spacing: 0.02rem;
}
#footer-x {
  font-family: "NeueMontreal-Light", sans-serif;
}

// Offcanvas
.offcanvas-body {
  font-family: "NeueMontreal-Regular", sans-serif;
}
.offcanvas-body h3 {
  letter-spacing: -0.04rem;
}
.offcanvas-body div {
  padding-bottom: 2rem;
}
.offcanvas-body p {
  letter-spacing: -0.01rem;
}

// Sidebar
#sidebar-label {
  font-family: "NeueMontreal-Light", sans-serif;
  letter-spacing: 0.02rem;
}

// THEME COLORS VARIABLES

// LINKS
$link-decoration: none;
$link-hover-decoration: underline;
.nav-link :hover {
  text-decoration: underline;
}

// BREAKPOINTS

// SPACING

// BORDERS

// -----
// 2. Import Variables and Mixins Files
// any redefined vars above will be incorporated into the files (e.g. in maps)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
// (anything that depends on variables/mixins file defined below)

// CUSTOM BUTTON BORDER RADIUS
$btn-border-radius: 0rem;
$btn-border-radius-lg: 0rem;
$btn-border-radius-sm: 0rem;
$btn-border-width: 1px;
$btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), 0.2);

// NAV BAR
// Nav toggler
$navbar-toggler-padding-y: 0.25rem;
$navbar-toggler-padding-x: 0.75rem;
$navbar-toggler-font-size: $font-size-lg;
$navbar-toggler-border-radius: 1px;
$navbar-toggler-focus-width: 1px;

// Nav bar light
$navbar-light-color: rgba($black, 0.9);
$navbar-light-hover-color: rgba($black, 0.7);
$navbar-light-active-color: rgba($black, 0.9);
$navbar-light-disabled-color: rgba($black, 0.3);
$navbar-light-toggler-icon-bg: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-light-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>");
$navbar-light-toggler-border-color: rgba($black, 0.5);

// MIXIN TEXT-TRUNCATE

// MIXIN CONTAINER PADDING

// ADD CUSTOM COLORS
$custom-colors: (
  "primary-bg": #f5f0e6,
  "cc-red": #e63c28,
  "cc-yellow": #f0d23c,
  "cc-gold": #f0b43c,
  "cc-blue": #3282dc,
  "cc-brown": #64281e,
  "cc-pink": #e6b4be,
  "cc-metal": #3c5064,
  "cc-grey": #c8d2dc,
  "cc-green": #505a32,
  "cc-violet": #5a50b4,
);
$theme-colors: map-merge($theme-colors, $custom-colors);

// ADD CLASSES FOR CUSTOM THEME COLOR PALETTE
@each $custom-color, $val in $theme-colors {
  .bg-#{$custom-color} {
    background-color: $val;
  }
  .bg-#{$custom-color}-light {
    background-color: tint-color($val, 80%);
  }
  .bg-#{$custom-color}-dark {
    background-color: shade-color($val, 30%);
  }
  .text-#{$custom-color} {
    color: $val;
  }
  .text-#{$custom-color}-light {
    color: tint-color($val, 80%);
  }
  .text-#{$custom-color}-dark {
    color: shade-color($val, 30%);
  }
}

// REMOVE THEME COLOR

// ADD CLASSES FOR COLOR PALETTE
@each $color, $val in $colors {
  .bg-#{$color} {
    background-color: $val;
  }
  .bg-#{$color}-light {
    background-color: tint-color($val, 80%);
  }
  .bg-#{$color}-dark {
    background-color: shade-color($val, 30%);
  }
  .text-#{$color} {
    color: $val;
  }
  .text-#{$color}-light {
    color: tint-color($val, 80%);
  }
  .text-#{$color}-dark {
    color: shade-color($val, 30%);
  }
}

// ADD DISPLAY HEADINGS

// -----
// 3. Import Utility File (utility api)
@import "../node_modules/bootstrap/scss/utilities";

// // ADD CUSTOM UTILITIES
$custom-utilities: (
  "rotate": (
    property: transform,
    class: rotate,
    values: (
      0: rotate(0deg),
      20: rotate(20deg),
      40: rotate(40deg),
      60: rotate(60deg),
      80: rotate(80deg),
      100: rotate(100deg),
      120: rotate(120deg),
      140: rotate(140deg),
      160: rotate(160deg),
      180: rotate(180deg),
    ),
  ),
  "opacity": (
    property: opacity,
    class: o,
    state: hover,
    values: (
      0: 0,
      25: 0.25,
      50: 0.5,
      75: 0.75,
      100: 1,
    ),
  ),
);
$utilities: map-merge($utilities, $custom-utilities);

// // MODIFIED UTILITIES

@import "../node_modules/bootstrap/scss/utilities/api";
// -----
// 4. Import Bootstrap Whole SASS Library
// (incorporates all above redefined vars & values)
@import "../node_modules/bootstrap/scss/bootstrap";
@import "./_featured";
@import "./_offcanvas";
